.deploy:apps:
  stage: deploy
  interruptible: true
  extends:
    - .ubuntu_image
  before_script:
    - sed -i "s/archive.ubuntu.com/us.archive.ubuntu.com/" /etc/apt/sources.list
    - /bin/bash -c "$(curl -sL https://git.io/vokNn)"
    - apt-fast update -qy
    - DEBIAN_FRONTEND=noninteractive apt-fast install -y sshpass ca-certificates rsync wget openssh-client gettext-base
  script:
    - touch ./deploy/swarm/.env && cp $ENV ./deploy/swarm/.env
    - echo "export CI_COMMIT_REF_NAME=\"$VERSION\"; export ENVIRONMENT=\"$ENVIRONMENT\"; export DOCKER_HUB_PASS=\"$DOCKER_HUB_PASS\"" > ./deploy/swarm/variable.txt
    - source ./deploy/swarm/variable.txt
    - envsubst < ./deploy/swarm/docker-swarm-go-helloworld-updated.yml > ./deploy/swarm/docker-swarm-go-helloworld.yml
    - sshpass -p "$SSH_PASSWORD" rsync -avz -e 'ssh -o StrictHostKeyChecking=no' ./deploy/swarm/ "$USERNAME@$SERVER_ADDRESS:./golang"
    # - ssh -o StrictHostKeyChecking=no -i private_key.pem $USERNAME@$SERVER_ADDRESS "source ~/golang/variable.txt && cd ~/golang && docker login --username friski12 --password-stdin && if [ "$ENVIRONMENT" = "dev" ]; then echo "Inside staging block" && docker stack deploy -c docker-swarm-lb.yml go && docker stack deploy -c docker-swarm-go-helloworld.yml go --with-registry-auth; fi"

deploy:apps:dev:
  extends:
    - .deploy:apps
  rules:
    - !reference [.next-rules, on-apps-dev]
  variables:
    VERSION: $CI_COMMIT_SHORT_SHA
    SERVER_ADDRESS: $SERVER
    ENVIRONMENT: dev
  environment:
    name: 'dev'
    action: 'prepare'

